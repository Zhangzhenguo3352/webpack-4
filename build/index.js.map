{"version":3,"file":"index.js","sources":["webpack:///src/index.js","webpack:///src/mytest-file/index.js","webpack:///src/mytest-file/prac.js","webpack:///src/mytest-file/props-dom.js","webpack:///src/mytest-file/es5-props.js","webpack:///src/mytest-file/es6-props-2.js","webpack:///src/mytest-file/propTypes.js","webpack:///src/mytest-file/Component-this.js"],"sourcesContent":["import React, {Component} from 'react';\r\nimport ReactDOM, {render} from 'react-dom';\r\n\r\nimport GetComponent from './mytest-file/index';\r\nimport StateDemo from './mytest-file/prac';\r\nimport PropsDom from './mytest-file/props-dom';\r\nimport Es5Props from './mytest-file/es5-props';\r\nimport Es6Props2 from './mytest-file/es6-props-2';\r\nimport PropTypes from './mytest-file/propTypes';\r\nimport ComponentThis from './mytest-file/Component-this';\r\nclass MyStyle extends Component {\r\n    render(){\r\n        var MyComponentStyle = {\r\n            color:'red'\r\n        };\r\n        return(\r\n            <div style={MyComponentStyle}>\r\n                zhang，\r\n                文字添加颜色,<GetComponent/> 这点文字是从：\r\n                {this.props.aaa} ==和 {this.props.bbb} 还用 {this.props.ccc}\r\n                <StateDemo/>\r\n                <PropsDom/>\r\n                <Es5Props/>\r\n                <Es6Props2 title='第二种，调用组件的时候传递props'/>\r\n                <PropTypes data = {true}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst obj = {\r\n    aaa:111,\r\n    bbb:2222,\r\n    ccc:3333\r\n};\r\n\r\n\r\nrender(<MyStyle {...obj}/>,document.getElementById('app'));\n\n\n/** WEBPACK FOOTER **\n ** src/index.js\n **/","import React, {Component} from 'react';\r\n\r\nclass GetOut extends Component{\r\n\r\n    render(){\r\n        var MyStyle = {\r\n            color:'#399',\r\n            fontSize:'20px'\r\n        };\r\n        return(\r\n            <div style={MyStyle}>从组件过来的文字</div>\r\n    )\r\n    }\r\n}\r\n\r\nexport default GetOut;\n\n\n/** WEBPACK FOOTER **\n ** src/mytest-file/index.js\n **/","import React, {Component} from 'react';\n\nclass PracState extends Component {\n\n    // state 可以写在 constructor(){}\n\n    constructor(){\n        super();\n        {console.log(this)}\n        this.state = {\n            setNumber:2\n        }\n\n    }\n\n    //组件真实 渲染到 浏览器\n    render(){\n        return(\n            <div>练习从 props 传递过来的 被 state 处理的方法，组件\n                <p>事件 加加加 {this.state.setNumber}</p>\n            </div>\n        )\n    }\n}\n\nexport default PracState;\n\n\n/** WEBPACK FOOTER **\n ** src/mytest-file/prac.js\n **/","import React, {Component} from 'react';\n\n\n// 这节对 props练习  (es6)\n\nclass PropsState2 extends Component {\n\n\n\n    constructor(){\n        super();\n        {console.log(this)}\n        this.state = {\n            setNumber:2\n        }\n\n    }\n\n    //组件真实 渲染到 浏览器\n    //state = {setNumber:0}\n\n\n\nrender(){\n    return(\n        <div>练习从 props 传递过来的 被 state 处理的方法，组件\n    <p>模仿父组件的数据传过来的 ： {this.props.status}</p>\n        <p>数据 ： {this.props.status}</p>\n    </div>\n)\n}\n}\n\n// 这节对 props练习\nPropsState2.defaultProps = {status:'第一种：初始化的props的设置'};\n\nexport default PropsState2;\n\n\n/** WEBPACK FOOTER **\n ** src/mytest-file/props-dom.js\n **/","var React = require('react');\r\n\r\n//es5 的写法 props\r\nvar CertificateConnect = React.createClass({\r\n        getDefaultProps:function(){\r\n            return {\r\n                status:'es5 getDefaultProps:function(){}'\r\n            }\r\n        },\r\n        render: function() {\r\n            return(\r\n                <div>{this.props.status}</div>\r\n            )\r\n        }\r\n\r\n});\r\n\r\nmodule.exports = CertificateConnect;\r\n\n\n\n/** WEBPACK FOOTER **\n ** src/mytest-file/es5-props.js\n **/","import React, {Component} from 'react';\n\nclass es6Prope2 extends Component{\n    constructor(e){\n        super(e)\n        console.log(e)   // {title: \"标题aa2\"}\n        this.state = {\n            title:''\n        }\n    }\n    render(){\n        return(<div>es6props2:{this.props.title}</div>)\n    }\n}\n\nexport default es6Prope2;\n\n\n/** WEBPACK FOOTER **\n ** src/mytest-file/es6-props-2.js\n **/","import React, {Component,PropTypes} from 'react';\n\n//这页是 为了 效验 propTypes 的属性值得类型，效验可提升开发者体验，用于约定统一的接口规范\nclass PropTypes3 extends Component{\n\n    render(){\n        return(<div>布尔类型：{this.props.data}</div>)\n    }\n\n}\nPropTypes3.propType = {data:React.PropTypes.string}\nexport default PropTypes3;\n\n\n/** WEBPACK FOOTER **\n ** src/mytest-file/propTypes.js\n **/","import React, {Component} from 'react';\n\n//这页是 为了 效验 propTypes 的属性值得类型，效验可提升开发者体验，用于约定统一的接口规范\nclass PropTypes4 extends Component{\n\n    render(){\n        console.log(this)\n        return(<div>布尔类型：{this.props.data}</div>)\n    }\n\n}\n\nexport default PropTypes4;\n\n\n/** WEBPACK FOOTER **\n ** src/mytest-file/Component-this.js\n **/"],"mappings":";;;;;;;;;AAAA;AACA;;;AAAA;AACA;;;AACA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;;;;;;;AAAA;;;;;;;;;;;AACA;AACA;AACA;AADA;AAGA;AACA;AAAA;AAAA;AAEA;AAFA;AAGA;AAHA;AAGA;AAHA;AAGA;AACA;AACA;AACA;AACA;AACA;AARA;AAWA;;;;;;AAEA;AACA;AACA;AACA;AAHA;AACA;AAMA;;;;;;;;;;;;;;;ACpCA;AACA;;;;;;;;;;;AACA;;;;;;;;;;;AAEA;AACA;AACA;AACA;AAFA;AAIA;AACA;AAAA;AAAA;AAAA;AAEA;;;;;;AAGA;;;;;;;;;;;;;;;ACfA;AACA;;;;;;;;;;;AACA;;;AAEA;AACA;AACA;AAAA;AACA;AADA;AACA;AACA;AAAA;AAAA;AACA;AACA;AADA;AACA;AAJA;AAOA;AACA;AACA;AACA;AACA;;;AADA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAIA;;;;;;AAGA;;;;;;;;;;;;;;;ACzBA;AACA;;;;;;;;;;;AAEA;AACA;AACA;;;AAIA;AAAA;AACA;AADA;AACA;AACA;AAAA;AAAA;AACA;AACA;AADA;AACA;AAJA;AAOA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAKA;;;;;;AAGA;AACA;AACA;AADA;AACA;;;;;;;;;;ACnCA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AAXA;AACA;AAaA;;;;;;;;;;;;;;;ACjBA;AACA;;;;;;;;;;;AACA;;;AACA;AAAA;AACA;AADA;AACA;AACA;AACA;AACA;AADA;AAHA;AAMA;AACA;;;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;AAGA;;;;;;;;;;;;;;;ACfA;AACA;;;;;;;;;;;AACA;AACA;AAAA;;;;;;;;;;;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;AAGA;;;;;;;;;;;;;;;;ACVA;AACA;;;;;;;;;;;AACA;AACA;AAAA;;;;;;;;;;;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;AAIA;;;;","sourceRoot":""}